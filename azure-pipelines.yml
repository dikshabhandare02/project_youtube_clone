trigger:
- main

pool:
  name: diksha_pool  # Self-hosted agent, or use 'vmImage' if Microsoft-hosted

variables:
  buildDir: '$(System.DefaultWorkingDirectory)/build'
  artifactName: 'drop'
  zipPath: '$(Build.ArtifactStagingDirectory)/build.zip'

steps:
# Checkout code
- checkout: self
  clean: true

# Install Node.js
- task: NodeTool@0
  inputs:
    versionSpec: '20.x'
  displayName: 'Install Node.js'

# Install dependencies and build the React app
- script: |
    npm install
    npm run build
  displayName: 'npm install and build'

# Archive the build output
- task: ArchiveFiles@2
  inputs:
    rootFolderOrFile: '$(buildDir)'
    includeRootFolder: false
    archiveType: 'zip'
    archiveFile: '$(zipPath)'
    replaceExistingArchive: true
  displayName: 'Archive React build folder'

# Publish the ZIP as an artifact
- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(zipPath)'
    ArtifactName: '$(artifactName)'
    publishLocation: 'Container'
  displayName: 'Publish artifact'

# Deploy the ZIP to Azure Web App
- task: AzureWebApp@1
  displayName: 'Deploy to Azure Web App'
  inputs:
    azureSubscription: 'demo-diksha'  # Replace with your service connection name
    appName: 'youtubeapp'             # Replace with your Web App name
    package: '$(zipPath)'
    appType: 'webAppLinux'
    runtimeStack: 'NODE|20-lts'
    deploymentMethod: 'zipDeploy'
